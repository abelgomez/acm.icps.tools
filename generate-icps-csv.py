#!/usr/bin/python3

import sys
import argparse
import csv

parser = argparse.ArgumentParser(description='ACM ICPS CSV Generator')
parser.add_argument('-i', '--input',
                    required=True,
                    type=argparse.FileType('r'),
                    help='Input CSV file. Contains lines in the form <paper-id>,<paper-type>')
parser.add_argument('-s', '--submissions',
                    required=True,
                    type=argparse.FileType('r'),
                    help='Submissions file. CSV as generated by EasyChair from the DB dump.')
parser.add_argument('-a', '--authors',
                    required=True,
                    type=argparse.FileType('r'),
                    help='Authors file. CSV as generated by EasyChair from the DB dump.')

if len(sys.argv) == 1:
    parser.print_help()
    sys.exit(1)

args = parser.parse_args()


def retrieve_title(id):
    args.submissions.seek(0)
    reader = csv.DictReader(args.submissions, delimiter=",")
    for line in reader:
        if line['#'] == id:
            return line['title'].strip()

def retrieve_authors(id):
    args.authors.seek(0)
    reader = csv.DictReader(args.authors, delimiter=",")
    authors = []
    for line in reader:
        if line['submission #'] == id:
            authors.append('{} {}:{}'.format(line['first name'], line['last name'], line['organization']).strip())
        if int(line['submission #']) > int(id):
            break;
    return authors

def retrieve_emails(id):
    args.authors.seek(0)
    reader = csv.DictReader(args.authors, delimiter=",")
    emails = { 'first_author' : None, 'other': [] }
    for line in reader:
        if line['submission #'] == id:
            if emails['first_author'] is None:
                emails['first_author'] = line['email'].strip()
            else:
                emails['other'].append(line['email'].strip())
        if int(line['submission #']) > int(id):
            break;
    return emails

try:
    reader = csv.reader(args.input, delimiter=",")
    for line in reader:
        id = line[0]
        type = line[1]
        title = retrieve_title(id)
        authors = retrieve_authors(id)
        emails = retrieve_emails(id)
        print('"{}","{}","{}","{}","{}","{}"'.format(type, title, ';'.join(authors), emails['first_author'], ';'.join(emails['other']), id))
finally:
    args.input.close()
    args.submissions.close()
    args.authors.close()

